@using PracticeExamV2.Models

@{
    ViewData["Title"] = "Courses";
    // Cast dynamic ViewBag to a concrete List so we can loop without LINQ
    var courses = ViewBag.Courses as List<Course> ?? new List<Course>();
}

<h1>All Courses</h1>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Course ID</th>
            <th>Title</th>
            <th>Credits</th>
            <th>Department</th>
            <th>Students</th>
            <th>Edit</th>
        </tr>
    </thead>
    <tbody>
        @for (int idx = 0; idx < courses.Count; idx++)
        {
            var c = courses[idx];

            // Build a CSV of student names without LINQ
            string studentsCsv = "";
            if (c.Enrollment != null)
            {
                var names = new List<string>();
                foreach (var e in c.Enrollment)
                {
                    var n = e?.Student?.FullName;
                    if (!string.IsNullOrWhiteSpace(n))
                        names.Add(n);
                }
                studentsCsv = string.Join(", ", names);
            }

            <tr>
                <td>@c.CourseID</td>
                <td>@c.Title</td>
                <td>@c.Credits</td>
                <td>@c.Department?.Name</td>
                <td>@studentsCsv</td>
                <td>
                <a asp-controller = "Course" asp-action ="Edit" asp-route-id="@c.CourseID" class = "btn btn-sm btn-outline-primary">Edit</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var page = (int)(ViewBag.Page ?? 1);
    var totalPages = (int)(ViewBag.TotalPages ?? 1);
}

<nav aria-label="Courses pages" class="mt-3">
    <ul class="pagination">
        <li class="page-item @(page <= 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index","Course", new { page = page - 1 })">Previous</a>
        </li>

        @for (int p = 1; p <= totalPages; p++)
        {
            var active = (p == page) ? "active" : "";
            <li class="page-item @active">
                <a class="page-link" href="@Url.Action("Index","Course", new { page = p })">@p</a>
            </li>
        }

        <li class="page-item @(page >= totalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index","Course", new { page = page + 1 })">Next</a>
        </li>
    </ul>
</nav>
