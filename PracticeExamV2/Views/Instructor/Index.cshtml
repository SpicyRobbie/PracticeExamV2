@using PracticeExamV2.Models

@{
    ViewData["Title"] = "Instructors";
    // Cast dynamic ViewBag to a concrete List so we can loop without LINQ
    var instructors = ViewBag.Instructors as List<Instructor> ?? new List<Instructor>();

}

<h1>All Instructors</h1>

<table class="table table-striped">
    <thead>
        <tr>
            <th>ID</th>
            <th>FirstName</th>
            <th>LastName</th>
            <th>HireDate</th>
            <th>Courses</th>
            <th>Edit</th>
        </tr>
    </thead>
    <tbody>
        @for (int idx = 0; idx < instructors.Count; idx++)
        {
            var i = instructors[idx];

            string titlesCsv = "";
            if (i.CourseAssignment != null)
            {
                var titles = new List<string>();
                foreach (var ca in i.CourseAssignment)
                {
                    var t = ca?.Course?.Title;
                    if (!string.IsNullOrWhiteSpace(t))
                        titles.Add(t);
                }
                titlesCsv = string.Join(", ", titles);
            }

            <tr>
                <td>@i.ID</td>
                <td>@i.FirstName</td>
                <td>@i.LastName</td>
                <td>@i.EnrollmentDate?.ToString("yyyy-MM-dd")</td>
                <td>@titlesCsv</td>
                <td>
                <a asp-controller = "Instructor" asp-action="Edit" asp-route-id="@i.ID" class="btn btn-sm btn-outline-primary">Edit</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var page = (int)(ViewBag.Page ?? 1);
    var totalPages = (int)(ViewBag.TotalPages ?? 1);
}

<nav aria-label="Courses pages" class="mt-3">
    <ul class="pagination">
        <li class="page-item @(page <= 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", "Course", new { page = page - 1 })">Previous</a>
        </li>

        @for (int p = 1; p <= totalPages; p++)
        {
            var active = (p == page) ? "active" : "";
            <li class="page-item @active">
                <a class="page-link" href="@Url.Action("Index", "Course", new { page = p })">@p</a>
            </li>
        }

        <li class="page-item @(page >= totalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", "Course", new { page = page + 1 })">Next</a>
        </li>
    </ul>
</nav>
